# Generated by Django 5.2.5 on 2025-09-09 23:35

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('issuing_organization', models.CharField(max_length=200)),
                ('summary', models.TextField(help_text='A brief description of the achievement.')),
                ('date_issued', models.DateField()),
                ('credential_url', models.URLField(blank=True, help_text='Link to verify the credential, if available.', max_length=255, null=True)),
                ('image', models.ImageField(blank=True, help_text='Optional: A scan or image of the certificate/award.', null=True, upload_to='achievements/')),
                ('category', models.CharField(choices=[('CERT', 'Certification'), ('AWRD', 'Award'), ('PUBL', 'Publication'), ('HONR', 'Honor')], default='CERT', max_length=4)),
            ],
            options={
                'ordering': ['-date_issued'],
            },
        ),
        migrations.CreateModel(
            name='ContactSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('subject', models.CharField(blank=True, max_length=200)),
                ('message', models.TextField()),
                ('submitted_date', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Contact Submission',
                'ordering': ['-submitted_date'],
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=255)),
                ('answer', models.TextField()),
                ('order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='NewsletterSubscriber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('subscribed_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Resume',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preview_image', models.ImageField(help_text='Upload a preview image of your resume (JPG/PNG recommended)', upload_to='resume/')),
                ('downloadable_file', models.FileField(help_text='Upload your resume PDF file', upload_to='resume/')),
                ('title', models.CharField(default='My Resume', max_length=200)),
                ('description', models.TextField(blank=True, default='Download my latest resume to learn more about my experience and skills.')),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('years_experience', models.CharField(blank=True, default='3+', max_length=10)),
                ('total_projects', models.CharField(blank=True, default='25+', max_length=10)),
                ('technologies_used', models.CharField(blank=True, default='15+', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('icon', models.CharField(help_text="Font Awesome icon class (e.g., 'fas fa-code')", max_length=50)),
                ('order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='SiteConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hero_greeting', models.CharField(default="HIII, IT'S ME", max_length=100)),
                ('hero_name', models.CharField(default='Roshan Damor', max_length=100)),
                ('hero_tagline', models.CharField(default='I am a Web Developer', max_length=200)),
                ('hero_bio', models.TextField(default='GREETINGS, ALL DIGITAL EXPLORERS! ...')),
                ('hero_projects_stat', models.CharField(default='25+', max_length=10)),
                ('hero_internships_stat', models.CharField(default='3+', max_length=10)),
                ('hero_articles_stat', models.CharField(default='15+', max_length=10)),
                ('about_title', models.CharField(default='About Me', max_length=200)),
                ('about_description', models.TextField(blank=True)),
                ('now_title', models.CharField(default="What I'm Doing Now", max_length=200)),
                ('now_description', models.TextField(blank=True)),
                ('skills_title', models.CharField(default='My Tech Stack', max_length=200)),
                ('skills_description', models.TextField(blank=True)),
                ('experience_title', models.CharField(default="Where I've Worked", max_length=200)),
                ('experience_description', models.TextField(blank=True)),
                ('twitter_url', models.URLField(blank=True, default='https://x.com/logicbyroshan')),
                ('github_url', models.URLField(blank=True, default='https://github.com/logicbyroshan')),
                ('linkedin_url', models.URLField(blank=True, default='https://www.linkedin.com/in/logicbyroshan')),
                ('youtube_url', models.URLField(blank=True, default='https://www.youtube.com/channel/logicbyroshan')),
                ('instagram_url', models.URLField(blank=True, null=True)),
                ('facebook_url', models.URLField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, default='contact@roshanproject.site', max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('location', models.CharField(blank=True, default='India', max_length=100)),
            ],
            options={
                'verbose_name': 'Site Configuration',
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('slug', models.SlugField(editable=False, max_length=100, unique=True)),
                ('category', models.CharField(choices=[('FRONTEND', 'Frontend Development'), ('BACKEND', 'Backend Development'), ('DATABASE', 'Database & Storage'), ('DEVOPS', 'DevOps & Deployment'), ('MOBILE', 'Mobile Development'), ('AI_ML', 'AI & Machine Learning'), ('DESIGN', 'Design & UI/UX'), ('TOOLS', 'Development Tools'), ('TESTING', 'Testing & QA'), ('OTHER', 'Other Skills')], default='OTHER', help_text='The category this skill belongs to', max_length=20)),
                ('icon', models.CharField(max_length=50)),
                ('summary', models.TextField()),
            ],
            options={
                'ordering': ['category', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Technology',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('icon', models.ImageField(blank=True, null=True, upload_to='tech_icons/')),
            ],
            options={
                'verbose_name_plural': 'Technologies',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='VideoResume',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('youtube_embed_url', models.URLField(help_text='The full YouTube embed URL (e.g., https://www.youtube.com/embed/VIDEO_ID)')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(editable=False, max_length=100)),
                ('category_type', models.CharField(choices=[('PRO', 'Project'), ('BLG', 'Blog'), ('EXP', 'Experience'), ('OTH', 'Other')], max_length=3)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
                'unique_together': {('name', 'category_type')},
            },
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(editable=False, max_length=200, unique=True)),
                ('summary', models.TextField(help_text='A short excerpt for the blog list page.')),
                ('content', models.TextField()),
                ('cover_image', models.ImageField(upload_to='blog_covers/')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('author_name', models.CharField(default='Roshan Damor', max_length=100)),
                ('author_avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('categories', models.ManyToManyField(limit_choices_to={'category_type': 'BLG'}, to='portfolio.category')),
            ],
            options={
                'ordering': ['-created_date'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_name', models.CharField(max_length=100)),
                ('body', models.TextField()),
                ('likes', models.PositiveIntegerField(default=0)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('is_approved', models.BooleanField(default=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='portfolio.blog')),
            ],
            options={
                'ordering': ['created_date'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(editable=False, max_length=200, unique=True)),
                ('summary', models.TextField(help_text='A short summary displayed on the project list page.')),
                ('content', models.TextField(help_text='The main detailed content for the project detail page.')),
                ('cover_image', models.ImageField(upload_to='project_covers/')),
                ('github_url', models.URLField(blank=True, null=True)),
                ('live_url', models.URLField(blank=True, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('categories', models.ManyToManyField(limit_choices_to={'category_type': 'PRO'}, to='portfolio.category')),
                ('technologies', models.ManyToManyField(related_name='projects', to='portfolio.technology')),
            ],
            options={
                'ordering': ['-created_date'],
            },
        ),
        migrations.CreateModel(
            name='ProjectComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_name', models.CharField(default='Anonymous', max_length=100)),
                ('body', models.TextField()),
                ('likes', models.PositiveIntegerField(default=0)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('is_approved', models.BooleanField(default=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='portfolio.project')),
            ],
            options={
                'verbose_name': 'Project Comment',
                'verbose_name_plural': 'Project Comments',
                'ordering': ['created_date'],
            },
        ),
        migrations.CreateModel(
            name='ProjectImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='project_images/')),
                ('caption', models.CharField(blank=True, max_length=255, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='portfolio.project')),
            ],
        ),
        migrations.CreateModel(
            name='SkillTechnologyDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('learning_journey', models.TextField()),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfolio.skill')),
                ('technology', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfolio.technology')),
            ],
            options={
                'unique_together': {('skill', 'technology')},
            },
        ),
        migrations.AddField(
            model_name='skill',
            name='technologies',
            field=models.ManyToManyField(through='portfolio.SkillTechnologyDetail', to='portfolio.technology'),
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=200)),
                ('company_url', models.URLField(blank=True, null=True)),
                ('role', models.CharField(max_length=200)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('summary', models.TextField()),
                ('responsibilities', models.TextField()),
                ('achievements', models.TextField()),
                ('experience_type', models.CharField(choices=[('FT', 'Full-Time'), ('IN', 'Internship'), ('FR', 'Freelance')], default='FT', max_length=2)),
                ('technologies', models.ManyToManyField(related_name='experiences', to='portfolio.technology')),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
    ]
